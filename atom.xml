<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iNNOREV&#39;s Blog</title>
  
  <subtitle>iNNOREV&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://innorev14.github.io/"/>
  <updated>2019-09-19T15:54:06.578Z</updated>
  <id>http://innorev14.github.io/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>seleinum 시작하기</title>
    <link href="http://innorev14.github.io/2019/09/20/seleinum/"/>
    <id>http://innorev14.github.io/2019/09/20/seleinum/</id>
    <published>2019-09-19T15:25:04.000Z</published>
    <updated>2019-09-19T15:54:06.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Selenium"><a href="#Selenium" class="headerlink" title="Selenium"></a>Selenium</h1><ul><li>셀레늄은 브라우저 자동화 라이브러리이다</li><li>주로 브라우저를 통한 UI 테스트에 사용된다</li><li>다양한 브라우저/OS/언어를 지원한다<blockquote><p>Firefox, Internet Explorer, Safari, Opera, Chrome, etc.</p></blockquote></li></ul><blockquote><p>OS : Windows, Mac OSX, Linux, etc.</p></blockquote><blockquote><p>Language : Python, Java, JavaScript, R, Ruby, etc.</p></blockquote><h3 id="web-driver-기본-API"><a href="#web-driver-기본-API" class="headerlink" title="web driver 기본 API"></a>web driver 기본 API</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">driver.get(<span class="string">"..."</span>) : 지정 URL로 이동하기</span><br><span class="line">driver.save_screenshot(<span class="string">"저장경로.png"</span>) : 스크린샷 찍기</span><br><span class="line">driver.title : 현재 페이지 제목</span><br><span class="line">driver.page_source : 현재 HTML 내역</span><br><span class="line">driver.current_url : 현재 URL</span><br><span class="line">driver.close() : Focus된 윈도우만 닫기</span><br><span class="line">driver.quit() : 현재 세션의 모든 윈도우 닫기</span><br><span class="line">driver.find_element(s)_* : Element 찾기</span><br></pre></td></tr></table></figure><h4 id="셀레늄-사용패턴"><a href="#셀레늄-사용패턴" class="headerlink" title="셀레늄 사용패턴"></a>셀레늄 사용패턴</h4><p>1) 브라우저 구동<br>2) 원하는 페이지/화면 이동<br>방법1) 주소창에 주소를 직접 넣고, 페이지이동<br>방법2) 링크를 클릭해서, 페이지 이동<br>방법3) 화면 스크롤을 하거나, JavaScript 코드를 넘겨 실행<br>3) 페이지 현재 HTML 현황을 읽거나, 특정 태그를 선택하여 읽기<br>3) Form Fields에 값 채워넣고, Submit<br>ex) 검색폼, 로그인폼, 글쓰기폼 등<br>각 Field를 지정하여 값을 채워넣고, Submit<br>4) 페이지 전환이 완료되기를 대기하거나, 원하는 컨텐츠가 렌더링될 때까지 대기<br>5) 스크린샷 찍기</p><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><p>pip install selenium beautifulsoup4 requests jupyter</p><h3 id="chrome-driver-다운"><a href="#chrome-driver-다운" class="headerlink" title="chrome driver 다운"></a>chrome driver 다운</h3><p><code>https://sites.google.com/a/chromium.org/chromedriver/</code></p><p>버전에 맞는 크롬 드라이버를 다운받는다</p><p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4935aa08-d4f6-4f88-be26-ddbf96f3aaa8%2FUntitled.png?table=block&id=131b2856-7204-4b1f-b155-c4674fb4a39f&width=3100&cache=v2" alt="chrome driver"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">driver_path = <span class="string">"/home/innorev/Downloads/chromedriver"</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">driver = webdriver.Chrome(executable_path=driver_path)</span><br><span class="line">driver.get(<span class="string">"http://naver.com"</span>)</span><br><span class="line">html = driver.page_source</span><br><span class="line">driver.quit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'html.parser'</span>)</span><br></pre></td></tr></table></figure><p><code>driver_path</code>에 chrome driver 실행 파일을 경로를 지정한다</p><p>웹 드라이버를 통해 크롬을 실행시키고, 네이버를 실행한 다음 소스코드를 html에 저장한 뒤 브라우저를 종료한다</p><p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7562bf8e-3b02-451d-bc59-01daae8a6356%2FUntitled.png?table=block&id=6b878b70-4a3e-497c-b16b-3fdab8f72b64&width=1770&cache=v2" alt></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">driver_path = <span class="string">"/home/innorev/Downloads/chromedriver"</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> driver = webdriver.Chrome(executable_path=driver_path) <span class="keyword">as</span> driver:</span><br><span class="line">    driver.get(<span class="string">"http://naver.com"</span>)</span><br><span class="line">    html = driver.page_source</span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'html.parser'</span>)</span><br></pre></td></tr></table></figure><p><code>with</code> 문을 이용하면 html에 소스를 저장하고 with문이 종료되기 때문에 브라우저도 종료된다</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Selenium&quot;&gt;&lt;a href=&quot;#Selenium&quot; class=&quot;headerlink&quot; title=&quot;Selenium&quot;&gt;&lt;/a&gt;Selenium&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;셀레늄은 브라우저 자동화 라이브러리이다&lt;/li&gt;
&lt;li&gt;주로 브라우저를 
      
    
    </summary>
    
    
      <category term="crawling" scheme="http://innorev14.github.io/categories/crawling/"/>
    
    
      <category term="crawling" scheme="http://innorev14.github.io/tags/crawling/"/>
    
  </entry>
  
  <entry>
    <title>relation queryset 성능 향상</title>
    <link href="http://innorev14.github.io/2019/09/19/relation-queryset-%EC%84%B1%EB%8A%A5-%ED%96%A5%EC%83%81/"/>
    <id>http://innorev14.github.io/2019/09/19/relation-queryset-성능-향상/</id>
    <published>2019-09-19T09:23:58.000Z</published>
    <updated>2019-09-21T01:39:43.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="웹서비스에서-각-요청의-반응속도에서의-병목-원인"><a href="#웹서비스에서-각-요청의-반응속도에서의-병목-원인" class="headerlink" title="웹서비스에서 각 요청의 반응속도에서의 병목 원인"></a>웹서비스에서 각 요청의 반응속도에서의 병목 원인</h2><h3 id="1-데이터베이스-아주-중요"><a href="#1-데이터베이스-아주-중요" class="headerlink" title="1. 데이터베이스 : 아주 중요"></a>1. 데이터베이스 : 아주 중요</h3><blockquote><ul><li>DB로 전달/실행되는 SQL 갯수를 줄이고<blockquote><ul><li>절대적인 SQL갯수를 줄이고,</li><li>조회 SQL의 경우 <code>Join</code>을 통해 쿼리 갯수를 줄일 수 있다</li><li>각 SQL의 성능/처리속도 최적화가 필요하다</li></ul></blockquote></li></ul></blockquote><h3 id="2-로직의-복잡도-중요"><a href="#2-로직의-복잡도-중요" class="headerlink" title="2. 로직의 복잡도 : 중요"></a>2. 로직의 복잡도 : 중요</h3><h3 id="3-프로그래밍-언어의-종류-대개는-미미"><a href="#3-프로그래밍-언어의-종류-대개는-미미" class="headerlink" title="3. 프로그래밍 언어의 종류 : 대개는 미미"></a>3. 프로그래밍 언어의 종류 : 대개는 미미</h3><hr><h3 id="DB단-파이썬단-조인을-통한-조회쿼리-성능-향상이-가능하다"><a href="#DB단-파이썬단-조인을-통한-조회쿼리-성능-향상이-가능하다" class="headerlink" title="DB단/파이썬단 조인을 통한 조회쿼리 성능 향상이 가능하다"></a>DB단/파이썬단 조인을 통한 조회쿼리 성능 향상이 가능하다</h3><h4 id="•-ForeignKey-혹은-OneToOneField-관계"><a href="#•-ForeignKey-혹은-OneToOneField-관계" class="headerlink" title="• ForeignKey 혹은 OneToOneField 관계"></a>• ForeignKey 혹은 OneToOneField 관계</h4><h5 id="•-QuerySet-select-related"><a href="#•-QuerySet-select-related" class="headerlink" title="• QuerySet.select_related()"></a>• <code>QuerySet.select_related()</code></h5><h4 id="•-ManyToManyField-혹은-ForeignKey의-reverse-relation"><a href="#•-ManyToManyField-혹은-ForeignKey의-reverse-relation" class="headerlink" title="• ManyToManyField 혹은 ForeignKey의 reverse relation"></a>• ManyToManyField 혹은 ForeignKey의 reverse relation</h4><h5 id="•-QuerySet-prefetch-related"><a href="#•-QuerySet-prefetch-related" class="headerlink" title="• QuerySet.prefetch_related()"></a>• <code>QuerySet.prefetch_related()</code></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;웹서비스에서-각-요청의-반응속도에서의-병목-원인&quot;&gt;&lt;a href=&quot;#웹서비스에서-각-요청의-반응속도에서의-병목-원인&quot; class=&quot;headerlink&quot; title=&quot;웹서비스에서 각 요청의 반응속도에서의 병목 원인&quot;&gt;&lt;/a&gt;웹서비스에서 각
      
    
    </summary>
    
    
      <category term="django" scheme="http://innorev14.github.io/categories/django/"/>
    
    
      <category term="django" scheme="http://innorev14.github.io/tags/django/"/>
    
      <category term="database" scheme="http://innorev14.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>requests 라이브러리</title>
    <link href="http://innorev14.github.io/2019/07/09/requests-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC/"/>
    <id>http://innorev14.github.io/2019/07/09/requests-라이브러리/</id>
    <published>2019-07-09T04:17:30.000Z</published>
    <updated>2019-09-20T04:27:58.951Z</updated>
    
    <content type="html"><![CDATA[<h2 id="requests-HTTP-for-Human"><a href="#requests-HTTP-for-Human" class="headerlink" title="requests: HTTP for Human"></a>requests: HTTP for Human</h2><blockquote><p>파이썬에서는 기본 라이브러리로 urllib이 제공되지만, 이보다<br>간결한 코드로 다양한 HTTP요청을 할 수 있는 최고의 라이브러리</p></blockquote><p>JavaScript 처리가 필요한 경우에는 selenium을 고려할 순<br>있다. 하지만 이 경우에도 requests 적용이 가능할<br>수도 있다. 크롤링할 페이지에 대해 다각도로 검토가<br>필요하다. <code>크롤링 시에 웹요청에서requests를 쓸 수만 있다면,가장 효율적인 처리 가능</code></p><h4 id="단순-GET-요청"><a href="#단순-GET-요청" class="headerlink" title="단순 GET 요청"></a>단순 GET 요청</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response = requests.get(<span class="string">'http://news.naver.com/main/home.nhn'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response.status_code <span class="comment"># 응답 상태코드 (int)</span></span><br><span class="line"><span class="number">200</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response.ok <span class="comment"># status_code가 200이상 400미만의 값인지 여부 (bool)</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response.content <span class="comment"># 응답 데이터 (bytes 타입)</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response.text <span class="comment"># 응답 문자열 (str타입) → .content 디코딩 결과</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h4 id="요청-시에-QueryString-인자-지정"><a href="#요청-시에-QueryString-인자-지정" class="headerlink" title="요청 시에 QueryString 인자 지정"></a>요청 시에 QueryString 인자 지정</h4><p>IT/과학 탭<br><a href="https://news.naver.com/main/main.nhn?mode=LSD&amp;mid=shm&amp;sid1=105" target="_blank" rel="noopener">https://news.naver.com/main/main.nhn?mode=LSD&amp;mid=shm&amp;sid1=105</a></p><h5 id="이와-같이-url-문자열에-모두-구성하여도-되나"><a href="#이와-같이-url-문자열에-모두-구성하여도-되나" class="headerlink" title="이와 같이 url 문자열에 모두 구성하여도 되나,"></a>이와 같이 url 문자열에 모두 구성하여도 되나,</h5><p>url = ‘<a href="https://news.naver.com/main/main.nhn?mode=LSD&amp;mid=shm&amp;sid1=105&#39;" target="_blank" rel="noopener">https://news.naver.com/main/main.nhn?mode=LSD&amp;mid=shm&amp;sid1=105&#39;</a></p><p>response = requests.get(url)</p><h5 id="다음과-같이-params인자로-구분하면-좀-더-편리-dict-list-tuple-모두-지원"><a href="#다음과-같이-params인자로-구분하면-좀-더-편리-dict-list-tuple-모두-지원" class="headerlink" title="다음과 같이 params인자로 구분하면 좀 더 편리 (dict/list/tuple 모두 지원)"></a>다음과 같이 params인자로 구분하면 좀 더 편리 (dict/list/tuple 모두 지원)</h5><p>params = {‘mode’: ‘LSD’, ‘mid’: ‘shm’, ‘sid1’: ‘105’}</p><h5 id="key-중복을-허용하기-위한-방법-→-본디-HTTP에서는-Parameter-이름-중복을-지원"><a href="#key-중복을-허용하기-위한-방법-→-본디-HTTP에서는-Parameter-이름-중복을-지원" class="headerlink" title="key 중복을 허용하기 위한 방법 → 본디 HTTP에서는 Parameter 이름 중복을 지원"></a>key 중복을 허용하기 위한 방법 → 본디 HTTP에서는 Parameter 이름 중복을 지원</h5><h5 id="params-‘mode’-‘LSD’-‘mid’-‘shm’-‘sid1’-‘105’"><a href="#params-‘mode’-‘LSD’-‘mid’-‘shm’-‘sid1’-‘105’" class="headerlink" title="params = [(‘mode’, ‘LSD’), (‘mid’, ‘shm’), (‘sid1’, ‘105’)]"></a>params = [(‘mode’, ‘LSD’), (‘mid’, ‘shm’), (‘sid1’, ‘105’)]</h5><p>response = requests.get(‘<a href="http://news.naver.com/main/main.nhn&#39;" target="_blank" rel="noopener">http://news.naver.com/main/main.nhn&#39;</a>, params=params)</p><p>####응답 헤더<br>dict 타입이 아니라 requests.structures.CaseInsensitiveDict 타입<br>Key문자열의 대소문자를 가리지 않는다.</p><p>각 헤더의 값은 헤더이름을 Key로 접근하여 획득</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>response.headers</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response.headers[<span class="string">'Content-Type'</span>] <span class="comment"># Key문자열 대소문자에 상관없이 접근</span></span><br><span class="line"><span class="string">'text/html; charset=UTF-8'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response.headers[<span class="string">'content-type'</span>]</span><br><span class="line"><span class="string">'text/html; charset=UTF-8'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response.encoding</span><br><span class="line"><span class="string">'UTF-8'</span></span><br></pre></td></tr></table></figure><p><code>response.encoding값은 Content-Type헤더의 charset값으로 획득.Content-Type헤더에 charset값이 없을 경우 iso-8859-1로 처리될 수 있다.</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;requests-HTTP-for-Human&quot;&gt;&lt;a href=&quot;#requests-HTTP-for-Human&quot; class=&quot;headerlink&quot; title=&quot;requests: HTTP for Human&quot;&gt;&lt;/a&gt;requests: HTTP f
      
    
    </summary>
    
    
      <category term="crawling" scheme="http://innorev14.github.io/categories/crawling/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="requests" scheme="http://innorev14.github.io/tags/requests/"/>
    
  </entry>
  
  <entry>
    <title>crawling</title>
    <link href="http://innorev14.github.io/2019/07/09/crawling/"/>
    <id>http://innorev14.github.io/2019/07/09/crawling/</id>
    <published>2019-07-09T03:42:36.000Z</published>
    <updated>2019-09-20T04:01:41.001Z</updated>
    
    <content type="html"><![CDATA[<h2 id="크롤링"><a href="#크롤링" class="headerlink" title="크롤링"></a>크롤링</h2><blockquote><p>• 사람이 웹페이지에 접속해서 정보를 읽어들이듯이 인터넷 상에 흩어져있는 자료들을<br>사람 대신에 프로그램을 통해 서핑하며 수집&amp;가공</p><p>• 이때 프로그램 구성에 따라 서핑능력의 차이가 발생.</p><blockquote><p>• 대표적으로 자바스크립트 혹은 ActiveX 처리 여부</p></blockquote></blockquote><h3 id="크롤링으로-할-수-있는-것들"><a href="#크롤링으로-할-수-있는-것들" class="headerlink" title="크롤링으로 할 수 있는 것들"></a>크롤링으로 할 수 있는 것들</h3><blockquote><p>• <code>Bot 프로그램</code>과 연계</p><p>• 오늘 날씨정보를 읽어와서, 메세지 알림</p><p>• 공연예매 빈 좌석이 생기면, 메세지 알림 혹은 자동 예매</p><p>• 중단 예정인 서비스가 있는 데, 자료백업을 지원하지 않는다면, 직접 백업</p><p>• 회사/학교 식당 메뉴를 찾아보기 힘들다면, 식사 1시간 전에 오늘의 메뉴 메세지 알림</p><p>• 가사가 들어있지 않은 MP3파일에 자동 가사 기입</p><p>• 국회의원 입법현황을 읽어와서 =&gt; 분석 (Pandas 등)</p></blockquote><h3 id="API-우선-이용"><a href="#API-우선-이용" class="headerlink" title="API 우선 이용"></a>API 우선 이용</h3><blockquote><p>크롤링은 정식으로 허용된 방법은 아니기에, 언제라도 막힐 수 있으며, 사이트<br>변경에 대한 크롤링 로직 관리/개선이 필요</p><p>• 컨텐츠 활용에 대한 부분은 법적인 이슈</p><p>• API는 해당 서비스 제공자가 정식으로 제공하는 서비스</p><p>• 해당 API에서 원하는 기능을 제공하지 않을 수도 있음</p><p>• API를 활용하더라도, 컨텐츠 활용에 대한 부분은 법적인 이슈</p><p>• 대개 requests 라이브러리를 통해 처리 가능<br>• 다양한 API</p><blockquote><p>• 인스타그램 API</p><p>• 네이버 : 블로그 검색 API, 지도 API</p></blockquote></blockquote><h3 id="다양한-웹페이지-구현"><a href="#다양한-웹페이지-구현" class="headerlink" title="다양한 웹페이지 구현"></a>다양한 웹페이지 구현</h3><p>똑같아 보이는 웹페이지라 할지라도,구현방법이 모두 다를 수 있음</p><p>• 필요한 컨텐츠가 HTML을 통해 표현이 모두 되어있을 경우 - 가장 쉽고 빠른 처리</p><p>• 필요한 컨텐츠가 서버로부터 JSON응답을 받아서 처리할 경우</p><p>• 필요한 컨텐츠가 JavaScript를 통해 처리할 경우</p><p>• 인증이 필요한 웹페이지</p><p>• 다양한 웹 프론트엔드 프레임워크를 통해 표현되는 페이지</p><p>• ActiveX가 있는 페이지</p><h3 id="http-s-클라이언트"><a href="#http-s-클라이언트" class="headerlink" title="http(s) 클라이언트"></a>http(s) 클라이언트</h3><p>GUI 브라우저</p><p>• Chrome, Firefox, Safari, Internet Explorer, Opera 등</p><p>• CLI 브라우저 : w3m, elinks, lynx 등</p><p>• CLI 브라우저 (단순요청) : curl, wget 등</p><p>• 파이썬 라이브러리/프레임워크</p><pre><code>• requests, httpie 등• selenium : 웹브라우저 제어• scrapy : 크롤링 프레임워크    • requests, selenium 등을 활용</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;크롤링&quot;&gt;&lt;a href=&quot;#크롤링&quot; class=&quot;headerlink&quot; title=&quot;크롤링&quot;&gt;&lt;/a&gt;크롤링&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;• 사람이 웹페이지에 접속해서 정보를 읽어들이듯이 인터넷 상에 흩어져있는 자료들을&lt;br&gt;사람 대
      
    
    </summary>
    
    
      <category term="crawling" scheme="http://innorev14.github.io/categories/crawling/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="crawling" scheme="http://innorev14.github.io/tags/crawling/"/>
    
  </entry>
  
  <entry>
    <title>first class function</title>
    <link href="http://innorev14.github.io/2019/03/07/first-class-function/"/>
    <id>http://innorev14.github.io/2019/03/07/first-class-function/</id>
    <published>2019-03-07T07:37:38.000Z</published>
    <updated>2019-09-19T07:41:14.521Z</updated>
    
    <content type="html"><![CDATA[<h2 id="first-class-function"><a href="#first-class-function" class="headerlink" title="first class function"></a>first class function</h2><h3 id="1-argument-parameter-함수를-인자로-전달"><a href="#1-argument-parameter-함수를-인자로-전달" class="headerlink" title="1. argument(parameter) : 함수를 인자로 전달"></a>1. argument(parameter) : 함수를 인자로 전달</h3><h3 id="2-variable-함수를-변수에-할당"><a href="#2-variable-함수를-변수에-할당" class="headerlink" title="2. variable : 함수를 변수에 할당"></a>2. variable : 함수를 변수에 할당</h3><h3 id="3-return-함수의-결과값을-리턴"><a href="#3-return-함수의-결과값을-리턴" class="headerlink" title="3. return : 함수의 결과값을 리턴"></a>3. return : 함수의 결과값을 리턴</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">g</span><span class="params">(func, c, d)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> func(c, d)</span><br><span class="line"></span><br><span class="line">a=<span class="number">10</span></span><br><span class="line">b=<span class="number">10</span></span><br><span class="line">g(f, a, b)</span><br><span class="line">---</span><br><span class="line"><span class="number">20</span></span><br><span class="line"></span><br><span class="line">f_var=f</span><br><span class="line">f_var(<span class="number">20</span>, <span class="number">30</span>)</span><br><span class="line">---</span><br><span class="line"><span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_calc</span><span class="params">(kind)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> kind == <span class="string">'add'</span>:</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a,b)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> a+b</span><br><span class="line">            <span class="keyword">return</span> add</span><br><span class="line">    <span class="keyword">elif</span> kind == <span class="string">'sub'</span>:</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">sub</span><span class="params">(a, b)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> a - b</span><br><span class="line">            <span class="keyword">return</span> sub</span><br><span class="line"></span><br><span class="line">f=create_calc(<span class="string">'add'</span>)</span><br><span class="line">f(<span class="number">10</span>,<span class="number">20</span>)</span><br><span class="line">---</span><br><span class="line"><span class="number">30</span></span><br><span class="line"></span><br><span class="line">f=create_calc(<span class="string">'sub'</span>)</span><br><span class="line">f(<span class="number">50</span>, <span class="number">30</span>)</span><br><span class="line">---</span><br><span class="line"><span class="number">20</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;first-class-function&quot;&gt;&lt;a href=&quot;#first-class-function&quot; class=&quot;headerlink&quot; title=&quot;first class function&quot;&gt;&lt;/a&gt;first class function&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="python" scheme="http://innorev14.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="first class function" scheme="http://innorev14.github.io/tags/first-class-function/"/>
    
  </entry>
  
  <entry>
    <title>expression of binary, hexadecimal number</title>
    <link href="http://innorev14.github.io/2019/03/07/expression-of-binary-hexadecimal-number/"/>
    <id>http://innorev14.github.io/2019/03/07/expression-of-binary-hexadecimal-number/</id>
    <published>2019-03-07T07:32:26.000Z</published>
    <updated>2019-09-19T07:37:00.782Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2진수-16진수-표현법"><a href="#2진수-16진수-표현법" class="headerlink" title="2진수, 16진수 표현법"></a>2진수, 16진수 표현법</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">0b1010</span></span><br><span class="line">hex(a)</span><br><span class="line">---</span><br><span class="line"><span class="string">'0xa'</span></span><br><span class="line"></span><br><span class="line">b=<span class="number">0b10101111</span></span><br><span class="line">hex(b)</span><br><span class="line">---</span><br><span class="line"><span class="string">'0xaf'</span></span><br><span class="line"></span><br><span class="line">c=<span class="number">0xaf</span></span><br><span class="line">bin(c)</span><br><span class="line">---</span><br><span class="line"><span class="string">'0b10101111'</span></span><br><span class="line"></span><br><span class="line">hex(id(a))</span><br><span class="line">---</span><br><span class="line"><span class="string">'0xfd2d940'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;2진수-16진수-표현법&quot;&gt;&lt;a href=&quot;#2진수-16진수-표현법&quot; class=&quot;headerlink&quot; title=&quot;2진수, 16진수 표현법&quot;&gt;&lt;/a&gt;2진수, 16진수 표현법&lt;/h2&gt;&lt;figure class=&quot;highlight python
      
    
    </summary>
    
    
      <category term="computer science" scheme="http://innorev14.github.io/categories/computer-science/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="computerscience" scheme="http://innorev14.github.io/tags/computerscience/"/>
    
  </entry>
  
  <entry>
    <title>recursion</title>
    <link href="http://innorev14.github.io/2019/03/06/recursion/"/>
    <id>http://innorev14.github.io/2019/03/06/recursion/</id>
    <published>2019-03-06T07:12:27.000Z</published>
    <updated>2019-09-19T07:31:09.125Z</updated>
    
    <content type="html"><![CDATA[<h2 id="재귀함수"><a href="#재귀함수" class="headerlink" title="재귀함수"></a>재귀함수</h2><h3 id="1-자기가-자기-자신을-호출하는-함수"><a href="#1-자기가-자기-자신을-호출하는-함수" class="headerlink" title="1. 자기가 자기 자신을 호출하는 함수"></a>1. 자기가 자기 자신을 호출하는 함수</h3><h3 id="2-기저조건-base-case"><a href="#2-기저조건-base-case" class="headerlink" title="2. 기저조건(base case)"></a>2. 기저조건(base case)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(num)</span>:</span></span><br><span class="line"><span class="meta">... </span>    func(num<span class="number">-1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>func(<span class="number">5</span>)</span><br><span class="line">---------------------------------------------------------------------------RecursionError Traceback (most recent call last)</span><br><span class="line">&lt;ipython-input-4-5c66d44d4a03&gt; in &lt;module&gt;----&gt; 1 func(5)</span><br><span class="line">&lt;ipython-input-3-d9aad6593317&gt; in func(num) 1 def func(num):----&gt; 2 func(num-1)</span><br><span class="line"><span class="meta">... </span>last <span class="number">1</span> frames repeated, <span class="keyword">from</span> the frame below ...</span><br><span class="line">&lt;ipython-input-3-d9aad6593317&gt; in func(num) 1 def func(num):----&gt; 2 func(num-1)</span><br><span class="line">RecursionError: maximum recursion depth exceeded</span><br></pre></td></tr></table></figure><p><code>maximum recursion depth excceded</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(num)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="comment">#기저조건 (base case)</span></span><br><span class="line"><span class="meta">... </span>    <span class="comment">#종료 조건</span></span><br><span class="line"><span class="meta">... </span>    <span class="comment"># 탈출 조건</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">if</span> num &lt;= <span class="number">0</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(num)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>func(num<span class="number">-1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>func(<span class="number">5</span>)</span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://www.evernote.com/shard/s158/res/bcb09282-d7e5-4ac0-b71e-8dab905b6b36.png" alt="recursion"></p><p>-&gt; stack unwiding 반대로 풀음</p><h2 id="Factorial"><a href="#Factorial" class="headerlink" title="Factorial"></a>Factorial</h2><h3 id="1-점화식-–-gt-fac-num-fac-num-1-num"><a href="#1-점화식-–-gt-fac-num-fac-num-1-num" class="headerlink" title="1. 점화식 –&gt; fac(num) = fac(num-1)*num"></a>1. 점화식 –&gt; fac(num) = fac(num-1)*num</h3><h3 id="2-기저조건-–-gt-if-num-1-then-return-1"><a href="#2-기저조건-–-gt-if-num-1-then-return-1" class="headerlink" title="2. 기저조건 –&gt; if num == 1 then return 1"></a>2. 기저조건 –&gt; if num == 1 then return 1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">factorial</span><span class="params">(num)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> factorial(num<span class="number">-1</span>)*num</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line"><span class="meta">... </span>    print(factorial(num))</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">24</span></span><br><span class="line"><span class="number">120</span></span><br><span class="line"><span class="number">720</span></span><br><span class="line"><span class="number">5040</span></span><br><span class="line"><span class="number">40320</span></span><br><span class="line"><span class="number">362880</span></span><br></pre></td></tr></table></figure><h2 id="Fibonacci"><a href="#Fibonacci" class="headerlink" title="Fibonacci"></a>Fibonacci</h2><h3 id="1-점화식-fibo-n-fibo-n-2-fibo-n-1"><a href="#1-점화식-fibo-n-fibo-n-2-fibo-n-1" class="headerlink" title="1. 점화식 : fibo(n) = fibo(n-2) + fibo(n-1)"></a>1. 점화식 : fibo(n) = fibo(n-2) + fibo(n-1)</h3><h3 id="2-기저조건-if-n-1-or-n-2-then-return-1"><a href="#2-기저조건-if-n-1-or-n-2-then-return-1" class="headerlink" title="2. 기저조건 : if n == 1 or n == 2 then return 1"></a>2. 기저조건 : if n == 1 or n == 2 then return 1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">fibonacci</span><span class="params">(n)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">if</span> n == <span class="number">1</span> <span class="keyword">or</span> n == <span class="number">2</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> fibonacci(n<span class="number">-2</span>) + fibonacci(n<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line"><span class="meta">... </span>    print(fibonacci(i), end=<span class="string">' '</span>)</span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">8</span> <span class="number">13</span> <span class="number">21</span> <span class="number">34</span> <span class="number">55</span></span><br></pre></td></tr></table></figure><h3 id="Tower-of-Hanoi"><a href="#Tower-of-Hanoi" class="headerlink" title="Tower of Hanoi"></a>Tower of Hanoi</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hanoi</span><span class="params">(num, _from, _by, _to)</span>:</span></span><br><span class="line"><span class="comment">#base case</span></span><br><span class="line"><span class="keyword">if</span> num==<span class="number">1</span>:</span><br><span class="line">    print(<span class="string">f'<span class="subst">&#123;_from&#125;</span>에서 <span class="subst">&#123;_to&#125;</span>로 <span class="subst">&#123;num&#125;</span>번째 쟁반 이동'</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">    hanoi(num<span class="number">-1</span>, _from, _to, _by)</span><br><span class="line">    print(<span class="string">f'<span class="subst">&#123;_from&#125;</span>에서 <span class="subst">&#123;_to&#125;</span>로 <span class="subst">&#123;num&#125;</span>번째 쟁반 이동'</span>)</span><br><span class="line">    hanoi(num<span class="number">-1</span>, _by, _from, _to)</span><br><span class="line"></span><br><span class="line">hanoi(<span class="number">3</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>)</span><br><span class="line">----</span><br><span class="line">a에서 c로 <span class="number">1</span>번째 쟁반 이동</span><br><span class="line">a에서 b로 <span class="number">2</span>번째 쟁반 이동</span><br><span class="line">c에서 b로 <span class="number">1</span>번째 쟁반 이동</span><br><span class="line">a에서 c로 <span class="number">3</span>번째 쟁반 이동</span><br><span class="line">b에서 a로 <span class="number">1</span>번째 쟁반 이동</span><br><span class="line">b에서 c로 <span class="number">2</span>번째 쟁반 이동</span><br><span class="line">a에서 c로 <span class="number">1</span>번째 쟁반 이동</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;재귀함수&quot;&gt;&lt;a href=&quot;#재귀함수&quot; class=&quot;headerlink&quot; title=&quot;재귀함수&quot;&gt;&lt;/a&gt;재귀함수&lt;/h2&gt;&lt;h3 id=&quot;1-자기가-자기-자신을-호출하는-함수&quot;&gt;&lt;a href=&quot;#1-자기가-자기-자신을-호출하는-함수&quot; cla
      
    
    </summary>
    
    
      <category term="python" scheme="http://innorev14.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="recursion" scheme="http://innorev14.github.io/tags/recursion/"/>
    
      <category term="factorial" scheme="http://innorev14.github.io/tags/factorial/"/>
    
  </entry>
  
  <entry>
    <title>rsp game2</title>
    <link href="http://innorev14.github.io/2019/03/06/rsp-game2/"/>
    <id>http://innorev14.github.io/2019/03/06/rsp-game2/</id>
    <published>2019-03-06T07:08:33.000Z</published>
    <updated>2019-09-19T07:12:13.653Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># win_list=['player', 'player', 'computer']</span></span><br><span class="line">win_list=[]</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">3</span>): <span class="comment">#초기값 설정 안할 땐 '_'</span></span><br><span class="line">    win_list. append(play_one())</span><br><span class="line">    <span class="keyword">if</span> win_list.count(<span class="string">'player'</span>) &gt;= <span class="number">2</span>:</span><br><span class="line">        print(<span class="string">'프레이어 승'</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> win_list:</span><br></pre></td></tr></table></figure><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">()</span>:</span></span><br><span class="line">user_num_games=int(input(<span class="string">"1:3판2선승, 2: 5판3선승: "</span>))</span><br><span class="line"><span class="keyword">while</span> user_num_games!=<span class="number">1</span> <span class="keyword">and</span> user_num_games!=<span class="number">2</span>:</span><br><span class="line">    user_num_games=int(input(<span class="string">"다시 입력해주세요 : "</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#user_num_games --&gt; 1 or 2</span></span><br><span class="line">    num_games= <span class="number">3</span> <span class="keyword">if</span> user_num_games==<span class="number">1</span> <span class="keyword">else</span> <span class="number">5</span></span><br><span class="line">    <span class="comment">#...</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(num_games):</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user_num_games=int(input(<span class="string">"1:3판2선승, 2: 5판3선승: "</span>))</span><br><span class="line"><span class="keyword">while</span> user_num_games!=<span class="number">1</span> <span class="keyword">and</span> user_num_games!=<span class="number">2</span>:</span><br><span class="line">    user_num_games=int(input(<span class="string">"다시 입력해주세요 : "</span>))</span><br><span class="line">    <span class="keyword">except</span> ValuError:</span><br><span class="line">    print(<span class="string">'wrong'</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#user_num_games --&gt; 1 or 2</span></span><br><span class="line">num_games= <span class="number">3</span> <span class="keyword">if</span> user_num_games==<span class="number">1</span> <span class="keyword">else</span> <span class="number">5</span></span><br><span class="line"><span class="comment">#...</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(num_games):</span><br><span class="line">    play_one(o)</span><br></pre></td></tr></table></figure><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">10</span></span><br><span class="line"><span class="keyword">while</span> a&gt;<span class="number">3</span>:</span><br><span class="line">    <span class="keyword">if</span> a % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">        a-=<span class="number">1</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(a)</span><br><span class="line">        a-=<span class="number">1</span></span><br><span class="line">        print(<span class="string">'happy!'</span>) <span class="comment">##결과 다시실행 정리!!</span></span><br></pre></td></tr></table></figure><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">input_handler</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">while</span> <span class="title">True</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        user_num_games=int(input(<span class="string">"1:3판2선승, 2: 5판3선승: "</span>))</span><br><span class="line"><span class="keyword">while</span> user_num_games!=<span class="number">1</span> <span class="keyword">and</span> user_num_games!=<span class="number">2</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        user_num_games=int(input(<span class="string">"다시 입력해주세요 : "</span>))</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        user_num_games=<span class="number">3</span></span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        input_handler()</span><br><span class="line">    <span class="keyword">return</span> user_num_games</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user_num_games</span><br><span class="line"><span class="keyword">except</span> ValuError:</span><br><span class="line">    print(<span class="string">'wrong'</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#user_num_games --&gt; 1 or 2</span></span><br><span class="line">num_games= <span class="number">3</span> <span class="keyword">if</span> user_num_games==<span class="number">1</span> <span class="keyword">else</span> <span class="number">5</span></span><br><span class="line"><span class="comment">#...</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(num_games):</span><br><span class="line">    play_one(o)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
    
      <category term="python" scheme="http://innorev14.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="function" scheme="http://innorev14.github.io/tags/function/"/>
    
  </entry>
  
  <entry>
    <title>packing,unpacking</title>
    <link href="http://innorev14.github.io/2019/03/06/packing-unpacking/"/>
    <id>http://innorev14.github.io/2019/03/06/packing-unpacking/</id>
    <published>2019-03-06T06:25:18.000Z</published>
    <updated>2019-09-19T06:32:15.807Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Packing"><a href="#Packing" class="headerlink" title="Packing"></a>Packing</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>container = <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(container) <span class="comment">#packing</span></span><br><span class="line">tuple</span><br></pre></td></tr></table></figure><h2 id="Unpacking"><a href="#Unpacking" class="headerlink" title="Unpacking"></a>Unpacking</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a, b = container</span><br><span class="line">---------------------------------------------------------------------------ValueError Traceback (most recent call last)</span><br><span class="line">&lt;ipython-input-73-25b20da98e75&gt; in &lt;module&gt;----&gt; 1 a, b = container</span><br><span class="line">ValueError: too many values to unpack (expected <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a, *b = container</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a, b, *c = container</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c</span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic = &#123;<span class="string">'a'</span> : <span class="number">1</span>, <span class="string">'b'</span> :<span class="number">2</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> k, v <span class="keyword">in</span> dic.items():</span><br><span class="line"><span class="meta">... </span>    print(k, v)</span><br><span class="line">a <span class="number">1</span></span><br><span class="line">b <span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Packing&quot;&gt;&lt;a href=&quot;#Packing&quot; class=&quot;headerlink&quot; title=&quot;Packing&quot;&gt;&lt;/a&gt;Packing&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
    
      <category term="python" scheme="http://innorev14.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="packing" scheme="http://innorev14.github.io/tags/packing/"/>
    
      <category term="unpacking" scheme="http://innorev14.github.io/tags/unpacking/"/>
    
  </entry>
  
  <entry>
    <title>rsp game</title>
    <link href="http://innorev14.github.io/2019/03/06/rsp-game/"/>
    <id>http://innorev14.github.io/2019/03/06/rsp-game/</id>
    <published>2019-03-06T05:51:18.000Z</published>
    <updated>2019-09-19T06:24:46.208Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="string">""""</span></span><br><span class="line"><span class="string">    func(integer, integer) -&gt; integer</span></span><br><span class="line"><span class="string">    두 값을 인자로 받고</span></span><br><span class="line"><span class="string">    결과는 그 두 값을 더한 값</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">return</span> a+b</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>input_data=input(<span class="string">'무엇이든 입력하세요 :'</span>)</span><br><span class="line">무엇이든 입력하세요 :asfd</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(input_data)</span><br><span class="line">str</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>data=int(input(<span class="string">"숫자를 입력하세요 :"</span>))</span><br><span class="line">숫자를 입력하세요 :<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(data)</span><br><span class="line">int</span><br></pre></td></tr></table></figure><h4 id="가위-바위-보-게임"><a href="#가위-바위-보-게임" class="headerlink" title="가위, 바위, 보 게임"></a>가위, 바위, 보 게임</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">player_win_or_lose</span><span class="params">(player, computer)</span>:</span></span><br><span class="line">    b_won=<span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> player == computer:</span><br><span class="line">        b_won=<span class="literal">None</span></span><br><span class="line">    <span class="keyword">elif</span> player == <span class="string">'바위'</span> <span class="keyword">and</span> computer == <span class="string">'가위'</span> <span class="keyword">or</span> \</span><br><span class="line">        player == <span class="string">'가위'</span> <span class="keyword">and</span> computer == <span class="string">'보'</span> <span class="keyword">or</span> \</span><br><span class="line">        player == <span class="string">'보'</span> <span class="keyword">and</span> computer == <span class="string">'바위'</span>:</span><br><span class="line">        b_won=<span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        b_won=<span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> b_won</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">play_one</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        player=get_player_choice()</span><br><span class="line">        computer=get_computer_choice()</span><br><span class="line">        winner=who_wins(player, computer)</span><br><span class="line">        print(<span class="string">f'플레이어: <span class="subst">&#123;player&#125;</span>, 컴퓨터: <span class="subst">&#123;computer&#125;</span>'</span>)</span><br><span class="line">    <span class="keyword">if</span> winner==<span class="string">'player'</span>:</span><br><span class="line">        print(<span class="string">'플레이어 승!'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'player'</span></span><br><span class="line">    <span class="keyword">elif</span> winner==<span class="string">'computer'</span>:</span><br><span class="line">        print(<span class="string">'컴퓨터 승!'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'computer'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'무승부!'</span>)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_final_winner</span><span class="params">(win_list, how_many)</span>:</span></span><br><span class="line">    print(<span class="string">f"플레이어 : <span class="subst">&#123;win_list.count(<span class="string">'player'</span>)&#125;</span> 승, 컴퓨터 : <span class="subst">&#123;win_list.count(<span class="string">'computer'</span>)&#125;</span> 승"</span>)</span><br><span class="line">    num_win=how_many+<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'player'</span> </span><br><span class="line">    <span class="keyword">if</span> win_list.count(<span class="string">'player'</span>)&gt;=num_win\</span><br><span class="line">    <span class="keyword">else</span> <span class="string">'computer'</span> </span><br><span class="line">    <span class="keyword">if</span> win_list.count(<span class="string">'computer'</span>)&gt;=num_win\</span><br><span class="line">    <span class="keyword">else</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Function&quot;&gt;&lt;a href=&quot;#Function&quot; class=&quot;headerlink&quot; title=&quot;Function&quot;&gt;&lt;/a&gt;Function&lt;/h5&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
    
      <category term="python" scheme="http://innorev14.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="function" scheme="http://innorev14.github.io/tags/function/"/>
    
  </entry>
  
  <entry>
    <title>abstraction</title>
    <link href="http://innorev14.github.io/2019/03/06/abstraction/"/>
    <id>http://innorev14.github.io/2019/03/06/abstraction/</id>
    <published>2019-03-06T05:50:19.000Z</published>
    <updated>2019-09-19T06:16:52.289Z</updated>
    
    <content type="html"><![CDATA[<h3 id="프로그래머가-하는-단-한가지-일-–-gt-추상화"><a href="#프로그래머가-하는-단-한가지-일-–-gt-추상화" class="headerlink" title="프로그래머가 하는 단 한가지 일 –&gt; 추상화"></a>프로그래머가 하는 단 한가지 일 –&gt; <code>추상화</code></h3><ul><li>절차지향(procedure(function을 의미)</li><li>객체지향(OOP)</li></ul><p>프로그래밍에서 말하는 추상화 - interface &amp; implementation(내부구현)을 분리하는 일</p><blockquote><p>함수 Signature(인터페이스)</p><ol><li>함수이름-&gt; 함수의 기능을 명확하게 표현</li><li>매개변수 -&gt; 무엇을 인자로 받을 것인가?</li><li>결과값 -&gt; 어떤 결과를 반환할 것 인가?</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;프로그래머가-하는-단-한가지-일-–-gt-추상화&quot;&gt;&lt;a href=&quot;#프로그래머가-하는-단-한가지-일-–-gt-추상화&quot; class=&quot;headerlink&quot; title=&quot;프로그래머가 하는 단 한가지 일 –&amp;gt; 추상화&quot;&gt;&lt;/a&gt;프로그래머가 
      
    
    </summary>
    
    
    
      <category term="abstraction" scheme="http://innorev14.github.io/tags/abstraction/"/>
    
  </entry>
  
  <entry>
    <title>bubble sort</title>
    <link href="http://innorev14.github.io/2019/03/05/bubble-sort/"/>
    <id>http://innorev14.github.io/2019/03/05/bubble-sort/</id>
    <published>2019-03-05T10:53:09.000Z</published>
    <updated>2019-09-19T05:40:53.820Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.youtube.com/watch?v=nmhjrI-aW5o" target="_blank" rel="noopener"><img src="https://miro.medium.com/max/388/1*7QsZkfrRGhAu5yxxeDdzsA.png" alt="bubble sort"></a></p><p><code>&lt;youtube - bubble sort&gt;</code> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(li)</span>:</span></span><br><span class="line">    n=len(li)</span><br><span class="line">    for i in range(?): #n를 이용</span><br><span class="line">        for j in range(?): #n과 i를 이용</span><br><span class="line">            <span class="keyword">if</span> li[j] &gt; li[j+<span class="number">1</span>]:</span><br><span class="line">            li[j], li[j+<span class="number">1</span>] = li[j+<span class="number">1</span>], li[j]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b=<span class="number">20</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a,b = b, a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>li=[<span class="number">5</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(li)</span><br><span class="line"><span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(li)</span>:</span></span><br><span class="line"><span class="meta">... </span>    n=len(li)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">for</span> i <span class="keyword">in</span> range(n<span class="number">-1</span>): <span class="comment">#n를 이용</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">for</span> j <span class="keyword">in</span> range(n<span class="number">-1</span>-i): <span class="comment">#n과 i를 이용</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">if</span> li[j] &gt; li[j+<span class="number">1</span>]:</span><br><span class="line"><span class="meta">... </span>                li[j], li[j+<span class="number">1</span>] = li[j+<span class="number">1</span>], li[j]</span><br><span class="line"><span class="meta">... </span>                print(li[j], li[j+<span class="number">1</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bubble_sort(li)</span><br><span class="line"><span class="number">2</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span> <span class="number">9</span></span><br><span class="line"><span class="number">8</span> <span class="number">9</span></span><br><span class="line"><span class="number">4</span> <span class="number">9</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="number">4</span> <span class="number">8</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>li</span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=nmhjrI-aW5o&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;https://miro.medium.com/max/388/1*7QsZkfrR
      
    
    </summary>
    
    
      <category term="algorithm" scheme="http://innorev14.github.io/categories/algorithm/"/>
    
    
      <category term="datastructure" scheme="http://innorev14.github.io/tags/datastructure/"/>
    
      <category term="algorithm" scheme="http://innorev14.github.io/tags/algorithm/"/>
    
      <category term="bubblesort" scheme="http://innorev14.github.io/tags/bubblesort/"/>
    
  </entry>
  
  <entry>
    <title>routine of function</title>
    <link href="http://innorev14.github.io/2019/03/05/routine-of-function/"/>
    <id>http://innorev14.github.io/2019/03/05/routine-of-function/</id>
    <published>2019-03-05T10:28:24.000Z</published>
    <updated>2019-09-19T05:30:29.198Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Routine-Subrutine-Procedure-Function"><a href="#Routine-Subrutine-Procedure-Function" class="headerlink" title="Routine, Subrutine, Procedure, Function"></a>Routine, Subrutine, Procedure, Function</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func_name</span><span class="params">(parameter1, parameter2, ....)</span>:</span></span><br><span class="line">    local_var = 연산 <span class="comment">#4칸 인덴테이션</span></span><br><span class="line">    ret = ...</span><br><span class="line"><span class="keyword">return</span> ret</span><br></pre></td></tr></table></figure><h5 id="메모리-할당"><a href="#메모리-할당" class="headerlink" title="메모리 할당"></a>메모리 할당</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span> <span class="comment">#전역변수 : Global Variable</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b=<span class="number">20</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(c, d)</span>:</span> <span class="comment">#&lt;--매개변수+지역변수=지역변수 #실제로 정의를 하지 호출은 안한다</span></span><br><span class="line"><span class="meta">... </span>    <span class="comment">#지역변수 : local variable</span></span><br><span class="line"><span class="meta">... </span>    e=c+d</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> e</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>func(a, b) <span class="comment"># 함수 호출 stack frame</span></span><br><span class="line"><span class="number">30</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>g_var=<span class="number">20</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(val)</span>:</span></span><br><span class="line"><span class="meta">... </span>    val+=<span class="number">100</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>func(g_var)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>g_var</span><br><span class="line"><span class="number">20</span></span><br></pre></td></tr></table></figure><p><img src="https://www.evernote.com/shard/s158/res/6dccd1b5-e270-418d-9f7d-e3b0613d5386.png" alt="procedure1"></p><p><img src="https://www.evernote.com/shard/s158/res/ac277910-2b8c-42ec-a59b-f552a32f6edf.png" alt="procedure2"></p><p><img src="https://www.evernote.com/shard/s158/res/f8d20fd7-fbff-4d9c-9e67-092a7d1b4f61.png" alt="procedure3"></p><p><img src="https://www.evernote.com/shard/s158/res/0c24db8d-374a-4ce7-b2b4-df35f4444489.png" alt="procedure4"></p><p><img src="https://www.evernote.com/shard/s158/res/5759bc5a-d341-4286-89e5-3327962517b7.png" alt="procedure5"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">global</span> g_var</span><br><span class="line"><span class="meta">... </span>    g_var+=<span class="number">30</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>func()</span><br><span class="line"><span class="number">50</span></span><br></pre></td></tr></table></figure><h3 id="Namespace"><a href="#Namespace" class="headerlink" title="Namespace"></a>Namespace</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>    b=<span class="number">20</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>        c=<span class="number">30</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>    b=<span class="number">20</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">nonlocal</span> b</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">global</span> a</span><br><span class="line"><span class="meta">... </span>        c=<span class="number">30</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>    b=<span class="number">20</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">inner1</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>        c=<span class="number">30</span></span><br><span class="line"><span class="meta">... </span>        <span class="function"><span class="keyword">def</span> <span class="title">inner2</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">nonlocal</span> b</span><br><span class="line"><span class="meta">... </span>            d=<span class="number">40</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>    b=<span class="number">20</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">inner1</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>        c=<span class="number">30</span></span><br><span class="line"><span class="meta">... </span>        <span class="function"><span class="keyword">def</span> <span class="title">inner2</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">nonlocal</span> b</span><br><span class="line"><span class="meta">... </span>            d=<span class="number">40</span></span><br><span class="line"><span class="meta">... </span>            print(b)</span><br><span class="line"><span class="meta">... </span>        inner2()</span><br><span class="line"><span class="meta">... </span>    inner1()</span><br><span class="line"><span class="meta">... </span>outer()</span><br><span class="line"><span class="number">30</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>    b=<span class="number">20</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">inner1</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>        c=<span class="number">30</span></span><br><span class="line"><span class="meta">... </span>        <span class="function"><span class="keyword">def</span> <span class="title">inner2</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>            <span class="comment"># nonlocal b</span></span><br><span class="line"><span class="meta">... </span>            d=<span class="number">40</span></span><br><span class="line"><span class="meta">... </span>            print(b) <span class="comment"># 값을 변경하지 않고 접근 한다</span></span><br><span class="line"><span class="meta">... </span>        inner2()</span><br><span class="line"><span class="meta">... </span>    inner1()</span><br><span class="line"><span class="meta">... </span>outer()</span><br><span class="line"><span class="number">30</span></span><br></pre></td></tr></table></figure><p><img src="https://www.evernote.com/shard/s158/res/61fe90ab-27a6-4387-890f-d8779f39870a.png" alt="namespace"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>    b=<span class="number">20</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">inner1</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>        b=<span class="number">30</span></span><br><span class="line"><span class="meta">... </span>        <span class="function"><span class="keyword">def</span> <span class="title">inner2</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>            d=<span class="number">40</span></span><br><span class="line"><span class="meta">... </span>            b=<span class="number">50</span></span><br><span class="line"><span class="meta">... </span>            print(b)</span><br><span class="line"><span class="meta">... </span>        inner2()</span><br><span class="line"><span class="meta">... </span>        print(b)</span><br><span class="line"><span class="meta">... </span>    inner1()</span><br><span class="line"><span class="meta">... </span>outer()</span><br><span class="line"><span class="number">50</span></span><br><span class="line"><span class="number">30</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span></span><br><span class="line"><span class="meta">... </span><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>    b=<span class="number">20</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">inner1</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>        b=<span class="number">30</span></span><br><span class="line"><span class="meta">... </span>        <span class="function"><span class="keyword">def</span> <span class="title">inner2</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>            d=<span class="number">40</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">nonlocal</span> b</span><br><span class="line"><span class="meta">... </span>            b=<span class="number">50</span></span><br><span class="line"><span class="meta">... </span>            print(b)</span><br><span class="line"><span class="meta">... </span>        inner2()</span><br><span class="line"><span class="meta">... </span>        print(b)</span><br><span class="line"><span class="meta">... </span>    inner1()</span><br><span class="line"><span class="meta">... </span>outer()</span><br><span class="line"><span class="number">50</span></span><br><span class="line"><span class="number">50</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Routine-Subrutine-Procedure-Function&quot;&gt;&lt;a href=&quot;#Routine-Subrutine-Procedure-Function&quot; class=&quot;headerlink&quot; title=&quot;Routine, Subrutine, 
      
    
    </summary>
    
    
      <category term="python" scheme="http://innorev14.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="function" scheme="http://innorev14.github.io/tags/function/"/>
    
      <category term="namespace" scheme="http://innorev14.github.io/tags/namespace/"/>
    
  </entry>
  
  <entry>
    <title>unique operator of python</title>
    <link href="http://innorev14.github.io/2019/03/05/unique-operator-of-python/"/>
    <id>http://innorev14.github.io/2019/03/05/unique-operator-of-python/</id>
    <published>2019-03-05T10:16:38.000Z</published>
    <updated>2019-09-19T05:30:29.210Z</updated>
    
    <content type="html"><![CDATA[<h2 id="파이썬만의-연산자"><a href="#파이썬만의-연산자" class="headerlink" title="파이썬만의 연산자"></a>파이썬만의 연산자</h2><h5 id="실수형-나누기"><a href="#실수형-나누기" class="headerlink" title="실수형 나누기"></a>실수형 나누기</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="number">10</span>/<span class="number">3</span> </span><br><span class="line"><span class="number">3.3333333333333335</span></span><br></pre></td></tr></table></figure><h5 id="정수형-나누기"><a href="#정수형-나누기" class="headerlink" title="정수형 나누기"></a>정수형 나누기</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span>//<span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h5 id="n제곱"><a href="#n제곱" class="headerlink" title="n제곱"></a>n제곱</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span>**<span class="number">52</span> <span class="comment">#math.pew(2, 52) &lt;-- C문법</span></span><br><span class="line"><span class="number">4503599627370496</span></span><br></pre></td></tr></table></figure><h4 id="while-condition-조건이-True일때만-실행"><a href="#while-condition-조건이-True일때만-실행" class="headerlink" title="while #condition(조건이 True일때만 실행) :"></a>while #condition(조건이 True일때만 실행) :</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">while</span> a &gt; <span class="number">5</span>:</span><br><span class="line"><span class="meta">... </span>    print(a)</span><br><span class="line"><span class="meta">... </span>    a=a<span class="number">-1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">while</span> a &gt; <span class="number">5</span>:</span><br><span class="line"><span class="meta">... </span>    print(a)</span><br><span class="line"><span class="meta">... </span>    a-=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">while</span> a &gt; <span class="number">5</span>:</span><br><span class="line"><span class="meta">... </span>    print(a)</span><br><span class="line"><span class="meta">... </span>    a-=<span class="number">1</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">if</span> a == <span class="number">7</span>:</span><br><span class="line"><span class="meta">... </span>      <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="모듈러-연산자"><a href="#모듈러-연산자" class="headerlink" title="모듈러 연산자"></a>모듈러 연산자</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">8</span>%<span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a)</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;파이썬만의-연산자&quot;&gt;&lt;a href=&quot;#파이썬만의-연산자&quot; class=&quot;headerlink&quot; title=&quot;파이썬만의 연산자&quot;&gt;&lt;/a&gt;파이썬만의 연산자&lt;/h2&gt;&lt;h5 id=&quot;실수형-나누기&quot;&gt;&lt;a href=&quot;#실수형-나누기&quot; class=&quot;he
      
    
    </summary>
    
    
      <category term="python" scheme="http://innorev14.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="operator" scheme="http://innorev14.github.io/tags/operator/"/>
    
  </entry>
  
  <entry>
    <title>boolean</title>
    <link href="http://innorev14.github.io/2019/03/05/boolean/"/>
    <id>http://innorev14.github.io/2019/03/05/boolean/</id>
    <published>2019-03-05T09:16:39.000Z</published>
    <updated>2019-09-19T03:42:45.942Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a>Boolean</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b=<span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> a &gt; <span class="number">10</span>:</span><br><span class="line">        print(<span class="string">'a &gt;10'</span>)</span><br><span class="line"><span class="comment"># True여야지 실행!</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> a == <span class="number">10</span>:</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>    print(<span class="string">'a &gt;10'</span>)</span><br><span class="line">a &gt;<span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> a &gt; <span class="number">10</span>:</span><br><span class="line"><span class="meta">... </span>    print(<span class="string">'a &gt;10'</span>)</span><br><span class="line"><span class="meta">... </span><span class="keyword">elif</span> a &lt; <span class="number">10</span>: <span class="comment">#else if</span></span><br><span class="line"><span class="meta">... </span>    print(<span class="string">'a &lt; 10'</span>)</span><br><span class="line"><span class="meta">... </span><span class="keyword">else</span>:</span><br><span class="line"><span class="meta">... </span>    print(<span class="string">'a == 10'</span>)</span><br><span class="line">a == <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a &gt; <span class="number">10</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a == <span class="number">10</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a &lt; <span class="number">10</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><h3 id="파이썬에서-False로-간주하는-객체"><a href="#파이썬에서-False로-간주하는-객체" class="headerlink" title="파이썬에서 False로 간주하는 객체"></a>파이썬에서 False로 간주하는 객체</h3><h5 id="False"><a href="#False" class="headerlink" title="False"></a>False</h5><h5 id="None"><a href="#None" class="headerlink" title="None"></a>None</h5><h5 id="“”"><a href="#“”" class="headerlink" title="“”"></a>“”</h5><h5 id><a href="#" class="headerlink" title="[]"></a>[]</h5><h5 id="-1"><a href="#-1" class="headerlink" title="()"></a>()</h5><h4 id="-2"><a href="#-2" class="headerlink" title="{}"></a>{}</h4><h4 id="set"><a href="#set" class="headerlink" title="set()"></a>set()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>li=[]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> li:</span><br><span class="line"><span class="meta">... </span>    print(<span class="string">"참"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> <span class="keyword">not</span> li:</span><br><span class="line"><span class="meta">... </span>    print(<span class="string">"참"</span>)</span><br><span class="line">참</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">not</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h2 id="Operator"><a href="#Operator" class="headerlink" title="Operator"></a>Operator</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># and</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span> <span class="keyword">and</span> <span class="literal">True</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span> <span class="keyword">and</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span> <span class="keyword">or</span> <span class="literal">True</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span> <span class="keyword">or</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">False</span> <span class="keyword">or</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&gt; <span class="number">0b101</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0b1010</span> &amp; <span class="number">0b1100</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bin(<span class="number">0b1010</span> &amp; <span class="number">0b1100</span>)</span><br><span class="line"><span class="string">'0b1000'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bin(<span class="number">0b1010</span> | <span class="number">0b1100</span>)</span><br><span class="line"><span class="string">'0b1110'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># XOR exclusice or</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bin(<span class="number">0b1100</span> ^ <span class="number">0b1010</span>)</span><br><span class="line"><span class="string">'0b110'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># shift operator</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">1</span>&lt;&lt;<span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">1</span>&lt;&lt;<span class="number">3</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span>&gt;&gt;<span class="number">1</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span>&gt;&gt;<span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">1</span>, <span class="number">2</span>] <span class="keyword">and</span> []</span><br><span class="line">[]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">1</span>, <span class="number">2</span>] <span class="keyword">or</span> []</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">1</span>, <span class="number">2</span>] <span class="keyword">or</span> [<span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[] <span class="keyword">or</span> [<span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><h4 id="맨-마지막-참조한-객체를-반환"><a href="#맨-마지막-참조한-객체를-반환" class="headerlink" title="맨 마지막 참조한 객체를 반환"></a>맨 마지막 참조한 객체를 반환</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">1</span>, <span class="number">2</span>] <span class="keyword">or</span> [] <span class="comment">#앞이 false</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">1</span>, <span class="number">2</span>] <span class="keyword">and</span> [<span class="number">3</span>, <span class="number">4</span>] <span class="comment">#앞이 True</span></span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[] <span class="keyword">and</span> [<span class="number">1</span>, <span class="number">2</span>] <span class="comment">#앞이 False</span></span><br><span class="line">[]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> [] <span class="keyword">and</span> [<span class="number">1</span>, <span class="number">2</span>]:</span><br><span class="line"><span class="meta">... </span>    print(<span class="string">'거짓'</span>)</span><br><span class="line"><span class="meta">... </span><span class="keyword">else</span>:</span><br><span class="line"><span class="meta">... </span>    print(<span class="string">'참'</span>)</span><br><span class="line">참</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Boolean&quot;&gt;&lt;a href=&quot;#Boolean&quot; class=&quot;headerlink&quot; title=&quot;Boolean&quot;&gt;&lt;/a&gt;Boolean&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
    
      <category term="python" scheme="http://innorev14.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="boolean" scheme="http://innorev14.github.io/tags/boolean/"/>
    
  </entry>
  
  <entry>
    <title>list comprehension</title>
    <link href="http://innorev14.github.io/2019/03/05/list-comprehension/"/>
    <id>http://innorev14.github.io/2019/03/05/list-comprehension/</id>
    <published>2019-03-05T09:06:53.000Z</published>
    <updated>2019-09-19T03:42:45.930Z</updated>
    
    <content type="html"><![CDATA[<h1 id="List-Comprehension"><a href="#List-Comprehension" class="headerlink" title="List Comprehension"></a>List Comprehension</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1~1000까지 만들고 싶을때</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>li=[]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1001</span>):</span><br><span class="line">        li.append(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 한줄로 가능</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>li2 = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1001</span>)]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>li2=[i*<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1001</span>)]</span><br></pre></td></tr></table></figure><h1 id="Dictionary-comprehension"><a href="#Dictionary-comprehension" class="headerlink" title="Dictionary comprehension"></a>Dictionary comprehension</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>tu=&#123;(<span class="string">'a'</span>, <span class="number">1</span>), (<span class="string">'b'</span>, <span class="number">2</span>), (<span class="string">'c'</span>, <span class="number">3</span>), (<span class="string">'d'</span>, <span class="number">4</span>)&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic=&#123;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> k, v <span class="keyword">in</span> tu:</span><br><span class="line">        dic[k]=v</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'b'</span>: <span class="number">2</span>, <span class="string">'d'</span>: <span class="number">4</span>, <span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'c'</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic2=&#123;k : v <span class="keyword">for</span> k , v <span class="keyword">in</span> tu&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic2</span><br><span class="line">&#123;<span class="string">'b'</span>: <span class="number">2</span>, <span class="string">'d'</span>: <span class="number">4</span>, <span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'c'</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic2=&#123;k : v*<span class="number">2</span> <span class="keyword">for</span> k, v <span class="keyword">in</span> tu&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic2</span><br><span class="line">&#123;<span class="string">'b'</span>: <span class="number">4</span>, <span class="string">'d'</span>: <span class="number">8</span>, <span class="string">'a'</span>: <span class="number">2</span>, <span class="string">'c'</span>: <span class="number">6</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;List-Comprehension&quot;&gt;&lt;a href=&quot;#List-Comprehension&quot; class=&quot;headerlink&quot; title=&quot;List Comprehension&quot;&gt;&lt;/a&gt;List Comprehension&lt;/h1&gt;&lt;figure c
      
    
    </summary>
    
    
      <category term="python" scheme="http://innorev14.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="listcomprehension" scheme="http://innorev14.github.io/tags/listcomprehension/"/>
    
  </entry>
  
  <entry>
    <title>view 객체</title>
    <link href="http://innorev14.github.io/2019/03/05/view/"/>
    <id>http://innorev14.github.io/2019/03/05/view/</id>
    <published>2019-03-05T07:53:32.000Z</published>
    <updated>2019-09-18T09:05:37.161Z</updated>
    
    <content type="html"><![CDATA[<h1 id="View객체"><a href="#View객체" class="headerlink" title="View객체"></a>View객체</h1><h3 id="key-values-item"><a href="#key-values-item" class="headerlink" title="key(), values(), item()"></a>key(), values(), item()</h3><h4 id="iterable-객체-순회할-수-있는-객체"><a href="#iterable-객체-순회할-수-있는-객체" class="headerlink" title="iterable 객체 : 순회할 수 있는 객체"></a>iterable 객체 : 순회할 수 있는 객체</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>li=[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'abc'</span>] </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> e <span class="keyword">in</span> li:</span><br><span class="line">        print(e)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"> abc</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tu=&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'a'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> t <span class="keyword">in</span> tu:</span><br><span class="line">        print(t)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">a</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string=<span class="string">'abcde'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> ch <span class="keyword">in</span> string:</span><br><span class="line">        print(ch)</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">40</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'e'</span>: <span class="literal">None</span>, <span class="string">'f'</span>: <span class="number">50</span>, <span class="string">'g'</span>: <span class="number">11</span>, <span class="string">'h'</span>: <span class="number">12</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> pair <span class="keyword">in</span> dic:</span><br><span class="line">        print(pair)</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br><span class="line">f</span><br><span class="line">g</span><br><span class="line">h</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> pair <span class="keyword">in</span> dic.items():</span><br><span class="line">        print(pair)</span><br><span class="line">(<span class="string">'a'</span>, <span class="number">1</span>)</span><br><span class="line">(<span class="string">'b'</span>, <span class="number">40</span>)</span><br><span class="line">  (<span class="string">'c'</span>, <span class="number">3</span>)</span><br><span class="line">(<span class="string">'e'</span>, <span class="literal">None</span>)</span><br><span class="line">(<span class="string">'f'</span>, <span class="number">50</span>)</span><br><span class="line">(<span class="string">'g'</span>, <span class="number">11</span>)</span><br><span class="line">(<span class="string">'h'</span>, <span class="number">12</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> key, value <span class="keyword">in</span> dic.items():</span><br><span class="line">        print(key, value)</span><br><span class="line">a <span class="number">1</span></span><br><span class="line">b <span class="number">40</span></span><br><span class="line">c <span class="number">3</span></span><br><span class="line">e <span class="literal">None</span></span><br><span class="line">f <span class="number">50</span></span><br><span class="line">g <span class="number">11</span></span><br><span class="line">h <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#↓view 객체</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic.keys() </span><br><span class="line">dict_keys([<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>])</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>key_list=list(dic.keys())</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>key_list</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic=&#123;<span class="string">'a'</span> : <span class="number">1</span>, <span class="string">'b'</span> : <span class="number">2</span>, <span class="string">'c'</span> : <span class="number">3</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">2</span>, <span class="string">'c'</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic.values()</span><br><span class="line">dict_values([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>key_list=list(dic.keys())</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>key_list</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>value_list=list(dic.values())</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>value_list</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>key_view=dic.keys()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>key_view</span><br><span class="line">dict_keys([<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>])</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>value_view=dic.values()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>value_view</span><br><span class="line">dict_values([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic[<span class="string">'d'</span>]=<span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">2</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'d'</span>: <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>key_list</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>value_list</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>key_view</span><br><span class="line">dict_keys([<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>])</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>value_view</span><br><span class="line">dict_values([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>li=[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> a <span class="keyword">in</span> li:</span><br><span class="line">        print(a)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>help(range)</span><br><span class="line">Help on <span class="class"><span class="keyword">class</span> <span class="title">range</span> <span class="title">in</span> <span class="title">module</span> <span class="title">builtins</span>:</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">range</span><span class="params">(object)</span></span></span><br><span class="line"><span class="class">| <span class="title">range</span><span class="params">(stop)</span> -&gt; range object</span></span><br><span class="line"><span class="class">| range(start, stop[, step]) -&gt; range object</span></span><br><span class="line"><span class="class">|</span></span><br><span class="line"><span class="class">| Return an object that produces a sequence of integers from start (inclusive)</span></span><br><span class="line"><span class="class">| to stop (exclusive) by step. range(i, j) produces i, i+1, i+2, ..., j-1.</span></span><br><span class="line"><span class="class">| start defaults to 0, and stop is omitted! range(4) produces 0, 1, 2, 3.</span></span><br><span class="line"><span class="class">| These are exactly the valid indices for a list of 4 elements.</span></span><br><span class="line"><span class="class">| When step is given, it specifies the increment (or decrement).</span></span><br><span class="line"><span class="class">|</span></span><br><span class="line"><span class="class">| Methods defined here:</span></span><br><span class="line">|</span><br><span class="line">| __bool__(self, /)</span><br><span class="line">| self != <span class="number">0</span></span><br><span class="line">|</span><br><span class="line">| __contains__(self, key, /)</span><br><span class="line">| Return key <span class="keyword">in</span> self.</span><br><span class="line">|</span><br><span class="line">| __eq__(self, value, /)</span><br><span class="line">| Return self==value.</span><br><span class="line">|</span><br><span class="line">| __ge__(self, value, /)</span><br><span class="line">| Return self&gt;=value.</span><br><span class="line">|</span><br><span class="line">| __getattribute__(self, name, /)</span><br><span class="line">| Return getattr(self, name).</span><br><span class="line">|</span><br><span class="line">| __getitem__(self, key, /)</span><br><span class="line">| Return self[key].</span><br><span class="line">|</span><br><span class="line">| __gt__(self, value, /)</span><br><span class="line">| Return self&gt;value.</span><br><span class="line">|</span><br><span class="line">| __hash__(self, /)</span><br><span class="line">| Return hash(self).</span><br><span class="line">|</span><br><span class="line">| __iter__(self, /)</span><br><span class="line">| Implement iter(self).</span><br><span class="line">|</span><br><span class="line">| __le__(self, value, /)</span><br><span class="line">| Return self&lt;=value.</span><br><span class="line">|</span><br><span class="line">| __len__(self, /)</span><br><span class="line">| Return len(self).</span><br><span class="line">|</span><br><span class="line">| __lt__(self, value, /)</span><br><span class="line">| Return self&lt;value.</span><br><span class="line">|</span><br><span class="line">| __ne__(self, value, /)</span><br><span class="line">| Return self!=value.</span><br><span class="line">|</span><br><span class="line">| __reduce__(...)</span><br><span class="line">| Helper <span class="keyword">for</span> pickle.</span><br><span class="line">|</span><br><span class="line">| __repr__(self, /)</span><br><span class="line">| Return repr(self).</span><br><span class="line">|</span><br><span class="line">| __reversed__(...)</span><br><span class="line">| Return a reverse iterator.</span><br><span class="line">|</span><br><span class="line">| count(...)</span><br><span class="line">| rangeobject.count(value) -&gt; integer -- return number of occurrences of value</span><br><span class="line">|</span><br><span class="line">| index(...)</span><br><span class="line">| rangeobject.index(value, [start, [stop]]) -&gt; integer -- return index of value.</span><br><span class="line">| Raise ValueError <span class="keyword">if</span> the value <span class="keyword">is</span> <span class="keyword">not</span> present.</span><br><span class="line">|</span><br><span class="line">| ----------------------------------------------------------------------</span><br><span class="line">| Static methods defined here:</span><br><span class="line">|</span><br><span class="line">| __new__(*args, **kwargs) <span class="keyword">from</span> builtins.type</span><br><span class="line">| Create <span class="keyword">and</span> <span class="keyword">return</span> a new object. See help(type) <span class="keyword">for</span> accurate signature.</span><br><span class="line">|</span><br><span class="line">| ----------------------------------------------------------------------</span><br><span class="line">| Data descriptors defined here:</span><br><span class="line">|</span><br><span class="line">| start</span><br><span class="line">|</span><br><span class="line">| step</span><br><span class="line">|</span><br><span class="line">| stop</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">        print(num)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>, <span class="number">2</span>):</span><br><span class="line">        print(num)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">11</span>):</span><br><span class="line">        print(num)</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">3</span>, <span class="number">11</span>):</span><br><span class="line">        print(num)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;View객체&quot;&gt;&lt;a href=&quot;#View객체&quot; class=&quot;headerlink&quot; title=&quot;View객체&quot;&gt;&lt;/a&gt;View객체&lt;/h1&gt;&lt;h3 id=&quot;key-values-item&quot;&gt;&lt;a href=&quot;#key-values-item&quot; class
      
    
    </summary>
    
    
      <category term="python" scheme="http://innorev14.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="view" scheme="http://innorev14.github.io/tags/view/"/>
    
  </entry>
  
  <entry>
    <title>dictionary</title>
    <link href="http://innorev14.github.io/2019/03/05/dictionary/"/>
    <id>http://innorev14.github.io/2019/03/05/dictionary/</id>
    <published>2019-03-05T07:39:41.000Z</published>
    <updated>2019-09-18T09:05:37.189Z</updated>
    
    <content type="html"><![CDATA[<h1 id="dictionary"><a href="#dictionary" class="headerlink" title="dictionary"></a>dictionary</h1><h3 id="pair-lt-key-item-gt"><a href="#pair-lt-key-item-gt" class="headerlink" title="pair &lt;key, item&gt;"></a>pair &lt;key, item&gt;</h3><h3 id="collection-of-pair"><a href="#collection-of-pair" class="headerlink" title="collection of pair"></a>collection of pair</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic=&#123;<span class="string">'a'</span> : <span class="number">1</span>, <span class="string">'b'</span> : <span class="number">2</span>, <span class="string">'c'</span> : <span class="number">3</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dict1=&#123;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(dic)</span><br><span class="line">dict</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic[<span class="string">'d'</span>]=<span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">2</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'d'</span>: <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic[<span class="string">'d'</span>]</span><br><span class="line"><span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> dic[<span class="string">'d'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">2</span>, <span class="string">'c'</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>li=[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string=<span class="string">"I am your father!"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>li.append(string)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>li</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'I am your father!'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic[<span class="string">'b'</span>]=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">10</span>, <span class="string">'c'</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic[<span class="string">'b'</span>]=<span class="number">15</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">15</span>, <span class="string">'c'</span>: <span class="number">3</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="키값으로-쓸-수-있는-자료형-자료구조"><a href="#키값으로-쓸-수-있는-자료형-자료구조" class="headerlink" title="키값으로 쓸 수 있는 자료형, 자료구조"></a>키값으로 쓸 수 있는 자료형, 자료구조</h3><h3 id="→-immutable-객체"><a href="#→-immutable-객체" class="headerlink" title="→ immutable 객체"></a>→ immutable 객체</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic[(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)]=<span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">15</span>, <span class="string">'c'</span>: <span class="number">3</span>, (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>): <span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]]=<span class="number">10</span></span><br><span class="line">TypeError Traceback (most recent call last)</span><br><span class="line">&lt;ipython-input-20-dcf7980cfa7b&gt; in &lt;module&gt;----&gt; 1 dic[[1, 2, 3]]=10</span><br><span class="line"></span><br><span class="line">TypeError: unhashable type: <span class="string">'list'</span></span><br><span class="line">In [<span class="number">21</span>]:</span><br><span class="line"></span><br><span class="line"><span class="comment"># get() similar to dic['b']</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic.get(<span class="string">'b'</span>)</span><br><span class="line"><span class="number">15</span></span><br></pre></td></tr></table></figure><h4 id="결정적인-차이는-에러를-유발하는가-안하는가"><a href="#결정적인-차이는-에러를-유발하는가-안하는가" class="headerlink" title="결정적인 차이는? 에러를 유발하는가? 안하는가?"></a>결정적인 차이는? 에러를 유발하는가? 안하는가?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic[<span class="string">'e'</span>]</span><br><span class="line">KeyError Traceback (most recent call last)</span><br><span class="line">&lt;ipython-input-22-87d22c709971&gt; in &lt;module&gt;----&gt; 1 dic['e']</span><br><span class="line"></span><br><span class="line">KeyError: <span class="string">'e'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic.get(<span class="string">'e'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(dic.get(<span class="string">'e'</span>))</span><br><span class="line"><span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> dic.get(<span class="string">'e'</span>):</span><br><span class="line">        print(dic[<span class="string">'e'</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'No data'</span>)</span><br><span class="line">No data</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">try</span>:</span><br><span class="line">        print(dic[<span class="string">'e'</span>])</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">'No data'</span>)</span><br><span class="line">No data</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">15</span>, <span class="string">'c'</span>: <span class="number">3</span>, (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>): <span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic.get(<span class="string">'e'</span>, <span class="number">0</span>) <span class="comment">#search 계열</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>help(dic.get)</span><br><span class="line">            Help on built-<span class="keyword">in</span> function get:</span><br><span class="line"></span><br><span class="line">            get(key, default=<span class="literal">None</span>, /) method of builtins.dict instance</span><br><span class="line">            Return the value <span class="keyword">for</span> key <span class="keyword">if</span> key <span class="keyword">is</span> <span class="keyword">in</span> the dictionary, <span class="keyword">else</span> default.</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic.pop((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)) <span class="comment">#delete 계열</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">15</span>, <span class="string">'c'</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic.setdefault(<span class="string">'e'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(dic.setdefault(<span class="string">'e'</span>))</span><br><span class="line"><span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic.setdefault(<span class="string">'e'</span>, <span class="number">10</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">15</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'e'</span>: <span class="number">10</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#insert 계열</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic.update(&#123;<span class="string">'b'</span> : <span class="number">40</span>, <span class="string">'f'</span> : <span class="number">50</span>&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">40</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'e'</span>: <span class="literal">None</span>, <span class="string">'f'</span>: <span class="number">50</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c=((<span class="string">'g'</span> , <span class="number">11</span>), (<span class="string">'h'</span>, <span class="number">12</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic.update(c)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">40</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'e'</span>: <span class="literal">None</span>, <span class="string">'f'</span>: <span class="number">50</span>, <span class="string">'g'</span>: <span class="number">11</span>, <span class="string">'h'</span>: <span class="number">12</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;dictionary&quot;&gt;&lt;a href=&quot;#dictionary&quot; class=&quot;headerlink&quot; title=&quot;dictionary&quot;&gt;&lt;/a&gt;dictionary&lt;/h1&gt;&lt;h3 id=&quot;pair-lt-key-item-gt&quot;&gt;&lt;a href=&quot;#pa
      
    
    </summary>
    
    
      <category term="python" scheme="http://innorev14.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="dictionary" scheme="http://innorev14.github.io/tags/dictionary/"/>
    
  </entry>
  
  <entry>
    <title>set</title>
    <link href="http://innorev14.github.io/2019/03/04/set/"/>
    <id>http://innorev14.github.io/2019/03/04/set/</id>
    <published>2019-03-04T06:39:57.000Z</published>
    <updated>2019-09-18T09:05:37.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h1><h3 id="집합을-표현하기-위해-만들어진-자료구조"><a href="#집합을-표현하기-위해-만들어진-자료구조" class="headerlink" title="집합을 표현하기 위해 만들어진 자료구조"></a>집합을 표현하기 위해 만들어진 자료구조</h3><h3 id="같은-데이터의-중복을-허용하지-않는다"><a href="#같은-데이터의-중복을-허용하지-않는다" class="headerlink" title="같은 데이터의 중복을 허용하지 않는다"></a>같은 데이터의 중복을 허용하지 않는다</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s=set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>li=[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>li</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><p>파이썬에서 set을 어떻게 정의 해놓았는지 살펴보자</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>help(s)</span><br><span class="line">Help on set object:</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">set</span><span class="params">(object)</span></span></span><br><span class="line"><span class="class">| <span class="title">set</span><span class="params">()</span> -&gt; new empty set object</span></span><br><span class="line"><span class="class">| set(iterable) -&gt; new set object</span></span><br><span class="line"><span class="class">|</span></span><br><span class="line"><span class="class">| Build an unordered collection of unique elements.</span></span><br><span class="line"><span class="class">|</span></span><br><span class="line"><span class="class">| Methods defined here:</span></span><br><span class="line">|</span><br><span class="line">| __and__(self, value, /)</span><br><span class="line">| Return self&amp;value.</span><br><span class="line">|</span><br><span class="line">| __contains__(...)</span><br><span class="line">| x.__contains__(y) &lt;==&gt; y in x.</span><br><span class="line">|</span><br><span class="line">| __eq__(self, value, /)</span><br><span class="line">| Return self==value.</span><br><span class="line">|</span><br><span class="line">| __ge__(self, value, /)</span><br><span class="line">| Return self&gt;=value.</span><br><span class="line">|</span><br><span class="line">| __getattribute__(self, name, /)</span><br><span class="line">| Return getattr(self, name).</span><br><span class="line">|</span><br><span class="line">| __gt__(self, value, /)</span><br><span class="line">| Return self&gt;value.</span><br><span class="line">|</span><br><span class="line">| __iand__(self, value, /)</span><br><span class="line">| Return self&amp;=value.</span><br><span class="line">|</span><br><span class="line">| __init__(self, /, *args, **kwargs)</span><br><span class="line">| Initialize self. See help(type(self)) <span class="keyword">for</span> accurate signature.</span><br><span class="line">|</span><br><span class="line">| __ior__(self, value, /)</span><br><span class="line">| Return self|=value.</span><br><span class="line">|</span><br><span class="line">| __isub__(self, value, /)</span><br><span class="line">| Return self-=value.</span><br><span class="line">|</span><br><span class="line">| __iter__(self, /)</span><br><span class="line">| Implement iter(self).</span><br><span class="line">|</span><br><span class="line">| __ixor__(self, value, /)</span><br><span class="line">| Return self^=value.</span><br><span class="line">|</span><br><span class="line">| __le__(self, value, /)</span><br><span class="line">| Return self&lt;=value.</span><br><span class="line">|</span><br><span class="line">| __len__(self, /)</span><br><span class="line">| Return len(self).</span><br><span class="line">|</span><br><span class="line">| __lt__(self, value, /)</span><br><span class="line">| Return self&lt;value.</span><br><span class="line">|</span><br><span class="line">| __ne__(self, value, /)</span><br><span class="line">| Return self!=value.</span><br><span class="line">|</span><br><span class="line">| __or__(self, value, /)</span><br><span class="line">| Return self|value.</span><br><span class="line">|</span><br><span class="line">| __rand__(self, value, /)</span><br><span class="line">| Return value&amp;self.</span><br><span class="line">|</span><br><span class="line">| __reduce__(...)</span><br><span class="line">| Return state information <span class="keyword">for</span> pickling.</span><br><span class="line">|</span><br><span class="line">| __repr__(self, /)</span><br><span class="line">| Return repr(self).</span><br><span class="line">|</span><br><span class="line">| __ror__(self, value, /)</span><br><span class="line">| Return value|self.</span><br><span class="line">|</span><br><span class="line">| __rsub__(self, value, /)</span><br><span class="line">| Return value-self.</span><br><span class="line">|</span><br><span class="line">| __rxor__(self, value, /)</span><br><span class="line">| Return value^self.</span><br><span class="line">|</span><br><span class="line">| __sizeof__(...)</span><br><span class="line">| S.__sizeof__() -&gt; size of S in memory, in bytes</span><br><span class="line">|</span><br><span class="line">| __sub__(self, value, /)</span><br><span class="line">| Return self-value.</span><br><span class="line">|</span><br><span class="line">| __xor__(self, value, /)</span><br><span class="line">| Return self^value.</span><br><span class="line">|</span><br><span class="line">| add(...)</span><br><span class="line">| Add an element to a set.</span><br><span class="line">|</span><br><span class="line">| This has no effect <span class="keyword">if</span> the element <span class="keyword">is</span> already present.</span><br><span class="line">|</span><br><span class="line">| clear(...)</span><br><span class="line">| Remove all elements <span class="keyword">from</span> this set.</span><br><span class="line">|</span><br><span class="line">| copy(...)</span><br><span class="line">| Return a shallow copy of a set.</span><br><span class="line">|</span><br><span class="line">| difference(...)</span><br><span class="line">| Return the difference of two <span class="keyword">or</span> more sets <span class="keyword">as</span> a new set.</span><br><span class="line">|</span><br><span class="line">| (i.e. all elements that are <span class="keyword">in</span> this set but <span class="keyword">not</span> the others.)</span><br><span class="line">|</span><br><span class="line">| difference_update(...)</span><br><span class="line">| Remove all elements of another set <span class="keyword">from</span> this set.</span><br><span class="line">|</span><br><span class="line">| discard(...)</span><br><span class="line">| Remove an element <span class="keyword">from</span> a set <span class="keyword">if</span> it <span class="keyword">is</span> a member.</span><br><span class="line">|</span><br><span class="line">| If the element <span class="keyword">is</span> <span class="keyword">not</span> a member, do nothing.</span><br><span class="line">|</span><br><span class="line">| intersection(...)</span><br><span class="line">| Return the intersection of two sets <span class="keyword">as</span> a new set.</span><br><span class="line">|</span><br><span class="line">| (i.e. all elements that are <span class="keyword">in</span> both sets.)</span><br><span class="line">|</span><br><span class="line">| intersection_update(...)</span><br><span class="line">| Update a set <span class="keyword">with</span> the intersection of itself <span class="keyword">and</span> another.</span><br><span class="line">|</span><br><span class="line">| isdisjoint(...)</span><br><span class="line">| Return <span class="literal">True</span> <span class="keyword">if</span> two sets have a null intersection.</span><br><span class="line">|</span><br><span class="line">| issubset(...)</span><br><span class="line">| Report whether another set contains this set.</span><br><span class="line">|</span><br><span class="line">| issuperset(...)</span><br><span class="line">| Report whether this set contains another set.</span><br><span class="line">|</span><br><span class="line">| pop(...)</span><br><span class="line">| Remove <span class="keyword">and</span> <span class="keyword">return</span> an arbitrary set element.</span><br><span class="line">| Raises KeyError <span class="keyword">if</span> the set <span class="keyword">is</span> empty.</span><br><span class="line">|</span><br><span class="line">| remove(...)</span><br><span class="line">| Remove an element <span class="keyword">from</span> a set; it must be a member.</span><br><span class="line">|</span><br><span class="line">| If the element <span class="keyword">is</span> <span class="keyword">not</span> a member, <span class="keyword">raise</span> a KeyError.</span><br><span class="line">|</span><br><span class="line">| symmetric_difference(...)</span><br><span class="line">| Return the symmetric difference of two sets <span class="keyword">as</span> a new set.</span><br><span class="line">|</span><br><span class="line">| (i.e. all elements that are <span class="keyword">in</span> exactly one of the sets.)</span><br><span class="line">|</span><br><span class="line">| symmetric_difference_update(...)</span><br><span class="line">| Update a set <span class="keyword">with</span> the symmetric difference of itself <span class="keyword">and</span> another.</span><br><span class="line">|</span><br><span class="line">| union(...)</span><br><span class="line">| Return the union of sets <span class="keyword">as</span> a new set.</span><br><span class="line">|</span><br><span class="line">| (i.e. all elements that are <span class="keyword">in</span> either set.)</span><br><span class="line">|</span><br><span class="line">| update(...)</span><br><span class="line">| Update a set <span class="keyword">with</span> the union of itself <span class="keyword">and</span> others.</span><br><span class="line">|</span><br><span class="line">| ----------------------------------------------------------------------</span><br><span class="line">| Static methods defined here:</span><br><span class="line">|</span><br><span class="line">| __new__(*args, **kwargs) <span class="keyword">from</span> builtins.type</span><br><span class="line">| Create <span class="keyword">and</span> <span class="keyword">return</span> a new object. See help(type) <span class="keyword">for</span> accurate signature.</span><br><span class="line">|</span><br><span class="line">| ----------------------------------------------------------------------</span><br><span class="line">| Data <span class="keyword">and</span> other attributes defined here:</span><br><span class="line">|</span><br><span class="line">| __hash__ = <span class="literal">None</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>string_set=set(<span class="string">'abcde'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string_set</span><br><span class="line">&#123;<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="set-operation"><a href="#set-operation" class="headerlink" title="set operation"></a>set operation</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(s)</span><br><span class="line">[<span class="string">'__and__'</span>,</span><br><span class="line"><span class="string">'__class__'</span>,</span><br><span class="line"><span class="string">'__contains__'</span>,</span><br><span class="line"><span class="string">'__delattr__'</span>,</span><br><span class="line"><span class="string">'__dir__'</span>,</span><br><span class="line"><span class="string">'__doc__'</span>,</span><br><span class="line"><span class="string">'__eq__'</span>,</span><br><span class="line"><span class="string">'__format__'</span>,</span><br><span class="line"><span class="string">'__ge__'</span>,</span><br><span class="line"><span class="string">'__getattribute__'</span>,</span><br><span class="line"><span class="string">'__gt__'</span>,</span><br><span class="line"><span class="string">'__hash__'</span>,</span><br><span class="line"><span class="string">'__iand__'</span>,</span><br><span class="line"><span class="string">'__init__'</span>,</span><br><span class="line"><span class="string">'__init_subclass__'</span>,</span><br><span class="line"><span class="string">'__ior__'</span>,</span><br><span class="line"><span class="string">'__isub__'</span>,</span><br><span class="line"><span class="string">'__iter__'</span>,</span><br><span class="line"><span class="string">'__ixor__'</span>,</span><br><span class="line"><span class="string">'__le__'</span>,</span><br><span class="line"><span class="string">'__len__'</span>,</span><br><span class="line"><span class="string">'__lt__'</span>,</span><br><span class="line"><span class="string">'__ne__'</span>,</span><br><span class="line"><span class="string">'__new__'</span>,</span><br><span class="line"><span class="string">'__or__'</span>,</span><br><span class="line"><span class="string">'__rand__'</span>,</span><br><span class="line"><span class="string">'__reduce__'</span>,</span><br><span class="line"><span class="string">'__reduce_ex__'</span>,</span><br><span class="line"><span class="string">'__repr__'</span>,</span><br><span class="line"><span class="string">'__ror__'</span>,</span><br><span class="line"><span class="string">'__rsub__'</span>,</span><br><span class="line"><span class="string">'__rxor__'</span>,</span><br><span class="line"><span class="string">'__setattr__'</span>,</span><br><span class="line"><span class="string">'__sizeof__'</span>,</span><br><span class="line"><span class="string">'__str__'</span>,</span><br><span class="line"><span class="string">'__sub__'</span>,</span><br><span class="line"><span class="string">'__subclasshook__'</span>,</span><br><span class="line"><span class="string">'__xor__'</span>,</span><br><span class="line"><span class="string">'add'</span>,</span><br><span class="line"><span class="string">'clear'</span>,</span><br><span class="line"><span class="string">'copy'</span>,</span><br><span class="line"><span class="string">'difference'</span>,</span><br><span class="line"><span class="string">'difference_update'</span>,</span><br><span class="line"><span class="string">'discard'</span>,</span><br><span class="line"><span class="string">'intersection'</span>,</span><br><span class="line"><span class="string">'intersection_update'</span>,</span><br><span class="line"><span class="string">'isdisjoint'</span>,</span><br><span class="line"><span class="string">'issubset'</span>,</span><br><span class="line"><span class="string">'issuperset'</span>,</span><br><span class="line"><span class="string">'pop'</span>,</span><br><span class="line"><span class="string">'remove'</span>,</span><br><span class="line"><span class="string">'symmetric_difference'</span>,</span><br><span class="line"><span class="string">'symmetric_difference_update'</span>,</span><br><span class="line"><span class="string">'union'</span>,</span><br><span class="line"><span class="string">'update'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1=set((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s2=set((<span class="number">3</span>, <span class="number">4</span> ,<span class="number">5</span>, <span class="number">8</span>))</span><br></pre></td></tr></table></figure><h4 id="union"><a href="#union" class="headerlink" title="union"></a>union</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.union(&#123;<span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>&#125;)</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 | s2</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">8</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="intersection"><a href="#intersection" class="headerlink" title="intersection"></a>intersection</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1.intersection(s2)</span><br><span class="line">&#123;<span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 &amp; s2</span><br><span class="line">&#123;<span class="number">3</span>, <span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="difference"><a href="#difference" class="headerlink" title="difference"></a>difference</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1.difference(s2)</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 - s2</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s2 - s1</span><br><span class="line">&#123;<span class="number">5</span>, <span class="number">8</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1.symmetric_difference(s2)</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s2.symmetric_difference(s1)</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 ^ s2</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="set-method"><a href="#set-method" class="headerlink" title="set method"></a>set method</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.add(<span class="number">5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.add(<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.update([<span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.remove(<span class="number">7</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>help(s.pop)</span><br><span class="line">Help on built-<span class="keyword">in</span> function pop:</span><br><span class="line"></span><br><span class="line">pop(...) method of builtins.set instance</span><br><span class="line">Remove <span class="keyword">and</span> <span class="keyword">return</span> an arbitrary set element.</span><br><span class="line">Raises KeyError <span class="keyword">if</span> the set <span class="keyword">is</span> empty.</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s=set([<span class="number">5</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">2</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        print(s.pop())</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>help(s.difference_update)</span><br><span class="line">Help on built-<span class="keyword">in</span> function difference_update:</span><br><span class="line"></span><br><span class="line">difference_update(...) method of builtins.set instance</span><br><span class="line">Remove all elements of another set <span class="keyword">from</span> this set.</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s2</span><br><span class="line">&#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">8</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1.difference_update(s2)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Set&quot;&gt;&lt;a href=&quot;#Set&quot; class=&quot;headerlink&quot; title=&quot;Set&quot;&gt;&lt;/a&gt;Set&lt;/h1&gt;&lt;h3 id=&quot;집합을-표현하기-위해-만들어진-자료구조&quot;&gt;&lt;a href=&quot;#집합을-표현하기-위해-만들어진-자료구조&quot; class
      
    
    </summary>
    
    
      <category term="python" scheme="http://innorev14.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="set" scheme="http://innorev14.github.io/tags/set/"/>
    
  </entry>
  
  <entry>
    <title>tuple</title>
    <link href="http://innorev14.github.io/2019/03/04/tuple/"/>
    <id>http://innorev14.github.io/2019/03/04/tuple/</id>
    <published>2019-03-04T06:33:43.000Z</published>
    <updated>2019-09-18T09:05:37.301Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tuple"><a href="#Tuple" class="headerlink" title="Tuple"></a>Tuple</h1><h3 id="immutable-객체이다"><a href="#immutable-객체이다" class="headerlink" title="immutable 객체이다"></a>immutable 객체이다</h3><h4 id="인덱싱으로-접근은-가능하지만"><a href="#인덱싱으로-접근은-가능하지만" class="headerlink" title="인덱싱으로 접근은 가능하지만"></a>인덱싱으로 접근은 가능하지만</h4><h5 id="요소의-값-변경은-불가능하다"><a href="#요소의-값-변경은-불가능하다" class="headerlink" title="요소의 값 변경은 불가능하다"></a>요소의 값 변경은 불가능하다</h5><h4 id="list보다-빠르고-효율적이다-tuple을-사용할-수-있는-환경이면-우선고려"><a href="#list보다-빠르고-효율적이다-tuple을-사용할-수-있는-환경이면-우선고려" class="headerlink" title="list보다 빠르고 효율적이다(tuple을 사용할 수 있는 환경이면 우선고려)"></a>list보다 빠르고 효율적이다(tuple을 사용할 수 있는 환경이면 우선고려)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>tu=(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tu2=()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tu</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tu2</span><br><span class="line">()</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tu[<span class="number">2</span>]</span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tu[<span class="number">2</span>]=<span class="number">5</span></span><br><span class="line"></span><br><span class="line">TypeError Traceback (most recent call last)</span><br><span class="line">&lt;ipython-input-6-cfaf37a707df&gt; in &lt;module&gt;----&gt; 1 tu[2]=5</span><br><span class="line"></span><br><span class="line">TypeError: <span class="string">'tuple'</span> object does <span class="keyword">not</span> support item assignment</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(tu)</span><br><span class="line">[<span class="string">'__add__'</span>,</span><br><span class="line"><span class="string">'__class__'</span>,</span><br><span class="line"><span class="string">'__contains__'</span>,</span><br><span class="line"><span class="string">'__delattr__'</span>,</span><br><span class="line"><span class="string">'__dir__'</span>,</span><br><span class="line"><span class="string">'__doc__'</span>,</span><br><span class="line"><span class="string">'__eq__'</span>,</span><br><span class="line"><span class="string">'__format__'</span>,</span><br><span class="line"><span class="string">'__ge__'</span>,</span><br><span class="line"><span class="string">'__getattribute__'</span>,</span><br><span class="line"><span class="string">'__getitem__'</span>,</span><br><span class="line"><span class="string">'__getnewargs__'</span>,</span><br><span class="line"><span class="string">'__gt__'</span>,</span><br><span class="line"><span class="string">'__hash__'</span>,</span><br><span class="line"><span class="string">'__init__'</span>,</span><br><span class="line"><span class="string">'__init_subclass__'</span>,</span><br><span class="line"><span class="string">'__iter__'</span>,</span><br><span class="line"><span class="string">'__le__'</span>,</span><br><span class="line"><span class="string">'__len__'</span>,</span><br><span class="line"><span class="string">'__lt__'</span>,</span><br><span class="line"><span class="string">'__mul__'</span>,</span><br><span class="line"><span class="string">'__ne__'</span>,</span><br><span class="line"><span class="string">'__new__'</span>,</span><br><span class="line"><span class="string">'__reduce__'</span>,</span><br><span class="line"><span class="string">'__reduce_ex__'</span>,</span><br><span class="line"><span class="string">'__repr__'</span>,</span><br><span class="line"><span class="string">'__rmul__'</span>,</span><br><span class="line"><span class="string">'__setattr__'</span>,</span><br><span class="line"><span class="string">'__sizeof__'</span>,</span><br><span class="line"><span class="string">'__str__'</span>,</span><br><span class="line"><span class="string">'__subclasshook__'</span>,</span><br><span class="line"><span class="string">'count'</span>,</span><br><span class="line"><span class="string">'index'</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Tuple&quot;&gt;&lt;a href=&quot;#Tuple&quot; class=&quot;headerlink&quot; title=&quot;Tuple&quot;&gt;&lt;/a&gt;Tuple&lt;/h1&gt;&lt;h3 id=&quot;immutable-객체이다&quot;&gt;&lt;a href=&quot;#immutable-객체이다&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="python" scheme="http://innorev14.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://innorev14.github.io/tags/python/"/>
    
      <category term="tuple" scheme="http://innorev14.github.io/tags/tuple/"/>
    
  </entry>
  
</feed>
